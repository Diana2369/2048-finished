{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n'use strict';\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.score = 0;\n        this.status = 'idle';\n        this.board = initialState ? this.cloneBoard(initialState) : this.createEmptyBoard();\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var _this = this;\n                return Array.from({\n                    length: this.size\n                }, function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            key: \"cloneBoard\",\n            value: function cloneBoard(board) {\n                return board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.cloneBoard(this.board);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === 'idle') {\n                    this.status = 'playing';\n                    if (this.isBoardEmpty()) {\n                        this.addRandomTile();\n                        this.addRandomTile();\n                    }\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = 'playing';\n                this.board = this.createEmptyBoard();\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"isBoardEmpty\",\n            value: function isBoardEmpty() {\n                for(var i = 0; i < this.size; i++)for(var j = 0; j < this.size; j++){\n                    if (this.board[i][j] !== 0) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.makeMove(this.mergeRowLeft.bind(this));\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                this.makeMove(function(row) {\n                    return _this.mergeRowLeft(row.reverse()).reverse();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.transpose();\n                this.moveLeft();\n                this.transpose();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.transpose();\n                this.moveRight();\n                this.transpose();\n            }\n        },\n        {\n            key: \"makeMove\",\n            value: function makeMove(transformFn) {\n                var oldBoard = JSON.stringify(this.board);\n                for(var i = 0; i < this.size; i++)this.board[i] = transformFn(this.board[i]);\n                var newBoard = JSON.stringify(this.board);\n                if (newBoard !== oldBoard) {\n                    this.addRandomTile();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"mergeRowLeft\",\n            value: function mergeRowLeft(row) {\n                var newRow = row.filter(function(val) {\n                    return val !== 0;\n                });\n                for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                    newRow[i] *= 2;\n                    this.score += newRow[i];\n                    newRow[i + 1] = 0;\n                }\n                return newRow.filter(function(val) {\n                    return val !== 0;\n                }).concat(Array(this.size).fill(0)).slice(0, this.size);\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose() {\n                var newBoard = this.createEmptyBoard();\n                for(var i = 0; i < this.size; i++)for(var j = 0; j < this.size; j++)newBoard[j][i] = this.board[i][j];\n                this.board = newBoard;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var i = 0; i < this.size; i++){\n                    for(var j = 0; j < this.size; j++)if (this.board[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), x = _emptyCells_Math_floor[0], y = _emptyCells_Math_floor[1];\n                this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = 'win';\n                else if (!this.canMove()) this.status = 'lose';\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var i = 0; i < this.size; i++)for(var j = 0; j < this.size; j++){\n                    var val = this.board[i][j];\n                    if (val === 0) return true;\n                    if (j < this.size - 1 && val === this.board[i][j + 1]) return true;\n                    if (i < this.size - 1 && val === this.board[i + 1][j]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$cells = document.querySelectorAll('.field-cell');\nvar $197cd56b15c33885$var$startButton = document.querySelector('.start');\nvar $197cd56b15c33885$var$scoreElement = document.querySelector('.game-score');\nvar $197cd56b15c33885$var$winMessage = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$loseMessage = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$startMessage = document.querySelector('.message-start');\n$197cd56b15c33885$var$startButton.addEventListener('click', function() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle') $197cd56b15c33885$var$startGame();\n    else $197cd56b15c33885$var$restartGame();\n});\nfunction $197cd56b15c33885$var$updateUI() {\n    var board = $197cd56b15c33885$var$game.getState();\n    $197cd56b15c33885$var$cells.forEach(function(cell, index) {\n        var row = Math.floor(index / 4);\n        var col = index % 4;\n        var value = board[row][col];\n        cell.textContent = value === 0 ? '' : value;\n        cell.className = 'field-cell';\n        if (value) {\n            cell.classList.add(\"field-cell--\".concat(value));\n            cell.classList.add('field-cell--merged');\n            setTimeout(function() {\n                return cell.classList.remove('field-cell--merged');\n            }, 150);\n        }\n    });\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$winMessage.classList.toggle('hidden', $197cd56b15c33885$var$game.getStatus() !== 'win');\n    $197cd56b15c33885$var$loseMessage.classList.toggle('hidden', $197cd56b15c33885$var$game.getStatus() !== 'lose');\n}\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$startMessage.classList.add('hidden');\n    $197cd56b15c33885$var$startButton.textContent = 'Restart';\n    $197cd56b15c33885$var$startButton.classList.remove('start');\n    $197cd56b15c33885$var$startButton.classList.add('restart');\n    $197cd56b15c33885$var$updateUI();\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$startMessage.classList.add('hidden');\n    $197cd56b15c33885$var$winMessage.classList.add('hidden');\n    $197cd56b15c33885$var$loseMessage.classList.add('hidden');\n    $197cd56b15c33885$var$updateUI();\n}\ndocument.addEventListener('keydown', function(e) {\n    var key = e.key;\n    var prevState = JSON.stringify($197cd56b15c33885$var$game.getState());\n    switch(key){\n        case 'ArrowLeft':\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case 'ArrowRight':\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case 'ArrowUp':\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case 'ArrowDown':\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    if (JSON.stringify($197cd56b15c33885$var$game.getState()) !== prevState) $197cd56b15c33885$var$updateUI();\n});\n\n})();\n//# sourceMappingURL=2048-finished.49bb4c58.js.map\n","import Game from '../modules/Game.class.js';\n\nconst game = new Game();\n\nconst cells = document.querySelectorAll('.field-cell');\nconst startButton = document.querySelector('.start');\nconst scoreElement = document.querySelector('.game-score');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst startMessage = document.querySelector('.message-start');\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    startGame();\n  } else {\n    restartGame();\n  }\n});\n\nfunction updateUI() {\n  const board = game.getState();\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = board[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = 'field-cell';\n\n    if (value) {\n      cell.classList.add(`field-cell--${value}`);\n\n      cell.classList.add('field-cell--merged');\n      setTimeout(() => cell.classList.remove('field-cell--merged'), 150);\n    }\n  });\n\n  scoreElement.textContent = game.getScore();\n\n  winMessage.classList.toggle('hidden', game.getStatus() !== 'win');\n  loseMessage.classList.toggle('hidden', game.getStatus() !== 'lose');\n}\n\nfunction startGame() {\n  game.start();\n  startMessage.classList.add('hidden');\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  updateUI();\n}\n\nfunction restartGame() {\n  game.restart();\n  startMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  updateUI();\n}\n\ndocument.addEventListener('keydown', (e) => {\n  const key = e.key;\n  const prevState = JSON.stringify(game.getState());\n\n  switch (key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  if (JSON.stringify(game.getState()) !== prevState) {\n    updateUI();\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(initialState = null) {\n    this.size = 4;\n    this.score = 0;\n    this.status = 'idle';\n\n    this.board = initialState ? this.cloneBoard(initialState) : this.createEmptyBoard();\n  }\n\n  createEmptyBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  cloneBoard(board) {\n    return board.map((row) => [...row]);\n  }\n\n  getState() {\n    return this.cloneBoard(this.board);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      if (this.isBoardEmpty()) {\n        this.addRandomTile();\n        this.addRandomTile();\n      }\n    }\n  }\n\n  restart() {\n    this.score = 0;\n    this.status = 'playing';\n    this.board = this.createEmptyBoard();\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  isBoardEmpty() {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] !== 0) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  moveLeft() {\n    this.makeMove(this.mergeRowLeft.bind(this));\n  }\n\n  moveRight() {\n    this.makeMove((row) => this.mergeRowLeft(row.reverse()).reverse());\n  }\n\n  moveUp() {\n    this.transpose();\n    this.moveLeft();\n    this.transpose();\n  }\n\n  moveDown() {\n    this.transpose();\n    this.moveRight();\n    this.transpose();\n  }\n\n  makeMove(transformFn) {\n    const oldBoard = JSON.stringify(this.board);\n\n    for (let i = 0; i < this.size; i++) {\n      this.board[i] = transformFn(this.board[i]);\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    if (newBoard !== oldBoard) {\n      this.addRandomTile();\n      this.checkGameStatus();\n    }\n  }\n\n  mergeRowLeft(row) {\n    const newRow = row.filter((val) => val !== 0);\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        this.score += newRow[i];\n        newRow[i + 1] = 0;\n      }\n    }\n\n    return newRow\n      .filter((val) => val !== 0)\n      .concat(Array(this.size).fill(0))\n      .slice(0, this.size);\n  }\n\n  transpose() {\n    const newBoard = this.createEmptyBoard();\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        newBoard[j][i] = this.board[i][j];\n      }\n    }\n    this.board = newBoard;\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [x, y] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  checkGameStatus() {\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    } else if (!this.canMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  canMove() {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        const val = this.board[i][j];\n\n        if (val === 0) {\n          return true;\n        }\n\n        if (j < this.size - 1 && val === this.board[i][j + 1]) {\n          return true;\n        }\n\n        if (i < this.size - 1 && val === this.board[i + 1][j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","name","from","test","a","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","TypeError","size","score","status","board","cloneBoard","createEmptyBoard","key","value","_this","fill","map","row","isArray","iter","Symbol","iterator","isBoardEmpty","addRandomTile","j","makeMove","mergeRowLeft","bind","reverse","transpose","moveLeft","moveRight","transformFn","oldBoard","JSON","stringify","checkGameStatus","newRow","filter","val","concat","newBoard","emptyCells","push","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","x","y","some","includes","canMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","__esModule","default","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$startButton","querySelector","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$updateUI","getState","forEach","cell","index","textContent","className","classList","add","setTimeout","remove","getScore","toggle","getStatus","addEventListener","start","restart","e","prevState","moveUp","moveDown"],"version":3,"file":"2048-finished.49bb4c58.js.map"}